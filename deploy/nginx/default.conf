upstream backend {
    server localhost:8080;
}

upstream openviduserver {
    server localhost:5443;
}

server{
    listen 80;
    listen [::]:80;
    
    server_name i7a104.p.ssafy.io;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl default_server;
	listen [::]:443 ssl default_server;


    server_name  i7a104.p.ssafy.io;
    access_log   /var/log/nginx/nginx.vhost.access.log;
    error_log    /var/log/nginx/nginx.vhost.error.log;

    ssl                  on;
    ssl_certificate      /cert/certificate.crt; 
    ssl_certificate_key  /cert/private.key;
    
    # Proxy
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Proto https;
    proxy_headers_hash_bucket_size 512;
    proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    location ~ /openvidu$ {
        proxy_pass http://openviduserver;
    }

    location / {
        root /front;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
	}

    location /api {
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_pass http://backend;
    }

     location /dashboard {
        allow all;
        # deny all;
        proxy_pass http://openviduserver;
    }

    location ~/.well-known/pki-validation {
		default_type "text/plain";
		index .txt;	
	}

    location /layouts/custom {
        rewrite ^/layouts/custom/(.*)$ /custom-layout/$1 break;
        root /opt/openvidu;
    }

    location /recordings {
        proxy_pass http://openviduserver;
    }

    location /openvidu/layouts {
        rewrite ^/openvidu/layouts/(.*)$ /custom-layout/$1 break;
        root /opt/openvidu;
    }

    location /openvidu/recordings {
        proxy_pass http://openviduserver;
    }

}